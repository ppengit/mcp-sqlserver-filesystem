name: Build Desktop Applications

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-desktop:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install Tauri CLI
        run: cargo install tauri-cli --version "^1.0"
      
      - name: Setup Node.js (for frontend)
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      
      - name: Build desktop application
        run: |
          cd src-tauri
          cargo tauri build
      
      - name: Package binaries
        run: python scripts/package_desktop.py package
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: desktop-binaries-${{ matrix.os }}
          path: src/mcp_sqlserver_filesystem/desktop_binaries/
          retention-days: 30
  
  create-release:
    needs: build-desktop
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts
      
      - name: Merge binaries
        run: |
          mkdir -p src/mcp_sqlserver_filesystem/desktop_binaries
          find ./artifacts -name "desktop-binaries-*" -type d | while read dir; do
            cp -r "$dir"/* src/mcp_sqlserver_filesystem/desktop_binaries/ 2>/dev/null || true
          done
          ls -la src/mcp_sqlserver_filesystem/desktop_binaries/
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      
      - name: Build Python package
        run: python -m build
      
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: twine upload dist/*
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*
            src/mcp_sqlserver_filesystem/desktop_binaries/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}